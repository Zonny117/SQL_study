\c clear
\h help
\q quit

● 쿼리문은 세미콜론으로 끝남!!
● 테이블의 그룹 = 스키마

0.실행
터미널에서 mysql -u 사용자명 -p
설정한 mysql 비밀번호를 입력하면 실행이 된다.

1.데이터베이스

생성
- CREATE DATABASE 데이터베이스명;
삭제
- DROP DATABASE 데이터베이스명;
사용
- USE 데이터베이스명;

2. 테이블

생성
- CREATE TABLE 테이블명(테이블 데이터 설정);

테이블 보기
- DESC 테이블명;

CRUD (Create, Read, Update, Delete)

필드 생성 (create)
- INSERT INTO 테이블명 (필드명) VALUES(필드값);


데이터타입
- 정수 : INT(한 테이블에 보여줄 숫자)
- 문자열 : CHAR(문자열 길이), VARCHAR(문자열길이), 문자열은 최대 255까지 저장할 수 있는데, char는 255 이하로 작성하더라도 남은 공간을 전부 차지한다
따라서 자원 낭비가 발생하고, VARCHAR는 지정한 길이만큼만 공간을 차지하기 때문에 절약할 수 있다.
- 날짜/시간 : DATETIME
- 그외 데이터 타입등은 http://www.incodom.kr/DB_-_%EB%8D%B0%EC%9D%B4%ED%84%B0_%ED%83%80%EC%9E%85/MYSQL 에서 확인

고유키
- PRIMARY KEY(지정할 필드명)
- 테이블에는 데이터를 구별할 수 있는 고유의 값이 반드시 필요하다.
- 보통 ID등에 설정되며, ID는 AUTO_INCREAMENT를 통해 데이터가 추가될 때마다 자동으로 숫자를 증가시켜 고유의 값이 매겨지게 할 수 있다.

★ WHERE는 매우 중요하다!!!!!

테이블 레코드 불러오기 (read)
- SELECT 필드명 FROM 테이블명;
- FROM은 생략이 가능하다.
- WHERE를 통해 조건에 맞는 레코드만 불러올 수 있다.
- ORDER BY 필드명 ASC/DESC을 통해 정렬순서를 지정할 수 있다. 
- LIMIT 숫자를 통해 불러올 데이터의 수를 제한할 수 있다. 데이터량이 많은 테이블의 데이터를 한번에 다 불러올 경우, 그것은 잘못된 쿼리문이다.

레코드 수정(update)
- UPDATE 테이블명 SET 필드명=변경할값;
- 기본은 위와 같지만 위처럼 작성할 경우 선택한 해당 필드명에 속한 모든 레코드가 변경되므로 WHERE를 통해 바꾸고 싶은 특정값만 제대로 선택해야한다. 

레코드 삭제(delete)
- DELETE FROM 테이블명;
- UPDATE와 마찬가지로 위처럼만 작성할 경우 테이블 자체가 삭제되버린다. 따라서 WHERE를 통해 특정값만 삭제를 할 수 있도록 쿼리문을 작성해야한다.

테이블 열 삭제
- ALTER TABLE 테이블명 DROP COLUMN 필드명;
- COLUMN은 생략가능하다.

테이블 열 이름 변경
- ALTER TABLE 테이블명 RENAME COLUMN 기존 필드명 TO 변경할 필드명;

테이블 열 데이터타입 변경
- ALTER TABLE 테이블명 MODIFY COLUMN 필드명 데이터타입;

테이블 이름 변경
- RENAME TABLE 기존 테이블명 TO 변경할 테이블명;

조인(JOIN) : 두개의 테이블을 합칠때 사용함, LEFT 혹은 RIGHT로 기준이 될 테이블을 지정할 수 있다.
- SELECT 필드명 FROM 테이블명 (LEFT / RIGHT) JOIN 합칠 테이블명 ON 조건;


3. 덤프 및 복구

데이터베이스 덤프
덤프할 경로지정) mysqldump -u 사용자명 -p 데이터베이스명 > 파일명.sql

데이터베이스 복구
덤프파일 경로지정) mysql -u 사용자명 -p 데이터베이스명 < 파일명.sql